<?xml version="1.0" encoding="UTF-8"?>
<job-scheduling-data xmlns="http://www.quartz-scheduler.org/xml/JobSchedulingData"
					 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
					 xsi:schemaLocation="http://www.quartz-scheduler.org/xml/JobSchedulingData http://www.quartz-scheduler.org/xml/job_scheduling_data_2_0.xsd"
					 version="2.0">

	<pre-processing-commands>
		<delete-jobs-in-group>*</delete-jobs-in-group>  <!-- clear all jobs in scheduler -->
		<delete-triggers-in-group>*</delete-triggers-in-group> <!-- clear all triggers in scheduler -->
	</pre-processing-commands>

	<processing-directives>
		<!-- if there are any jobs/trigger in scheduler of same name (as in this file), overwrite them -->
		<overwrite-existing-data>true</overwrite-existing-data>
		<!-- if there are any jobs/trigger in scheduler of same name (as in this file), and over-write is false, ignore them rather then generating an error -->
		<ignore-duplicates>false</ignore-duplicates>
	</processing-directives>

	<schedule>
		<job>
			<name>SyncUidTagData</name>
			<group>GroupOfSyncUidTagData</group>
			<description>Sync uidTag data</description>
			<job-class>com.vastiny.javaweb.quartz.xmlweb.task.SyncUserDataTask</job-class>
			<!--<durability>true</durability>-->
			<!--<recover>true</recover>-->
		</job>

        <!--<trigger>-->
            <!--<cron>-->
                <!--<name>GetUidTagTaskTriggerAtEveryDay</name>-->
                <!--<group>GroupOfImportJobTriggers</group>-->
                <!--<description>每天凌晨四点同步数据</description>-->
                <!--<job-name>SyncUidTagData</job-name>-->
                <!--<job-group>GroupOfSyncUidTagData</job-group>-->
                <!--<cron-expression>0 0 4 * * ?</cron-expression>-->
            <!--</cron>-->
        <!--</trigger>-->
        <trigger>
            <simple>
                <name>SyncUidTagTaskTriggerOneTime</name>
                <group>GroupOfSyncJobTriggers</group>
                <job-name>SyncUidTagData</job-name>
                <job-group>GroupOfSyncUidTagData</job-group>
                <repeat-count>0</repeat-count> <!-- repeat indefinitely  -->
                <repeat-interval>5000</repeat-interval>  <!--  every 5 seconds -->
            </simple>
        </trigger>


        <!--<job>-->
            <!--<name>ExecuteUlcTask</name>-->
            <!--<group>GroupOfExecuteTask</group>-->
            <!--<job-class>com.jinfuzi.yun.ulctask.task.ExecuteUlcTask</job-class>-->
        <!--</job>-->
        <!--<trigger>-->
            <!--<simple>-->
                <!--<name>TestSimpleTrigger1AtFiveSecondInterval</name>-->
                <!--<job-name>ExecuteUlcTask</job-name>-->
                <!--<job-group>GroupOfExecuteTask</job-group>-->
                <!--<repeat-count>10</repeat-count> &lt;!&ndash; repeat indefinitely  &ndash;&gt;-->
                <!--<repeat-interval>5000</repeat-interval>  &lt;!&ndash;  every 5 seconds &ndash;&gt;-->
            <!--</simple>-->
        <!--</trigger>-->
        <!--<trigger>-->
            <!--<cron>-->
                <!--<name>ExecuteUlcTaskTrigger</name>-->
                <!--<group>GroupOfImportJobTriggers</group>-->
                <!--<description>run every five minutes</description>-->
                <!--<job-name>ExecuteUlcTask</job-name>-->
                <!--<job-group>GroupOfExecuteTask</job-group>-->
                <!--<cron-expression>0 */5 * * * ?</cron-expression>-->
            <!--</cron>-->
        <!--</trigger>-->

		<!--<job>-->
			<!--<name>TestJob2</name>-->
			<!--<group>GroupOfTestJob2</group>-->
			<!--<description>This is the description of TestJob2</description>-->
            <!--<job-class>com.jinfuzi.yun.ulctask.task.SimpleJob</job-class>-->
			<!--<durability>false</durability>-->
			<!--<recover>true</recover>-->
			<!--<job-data-map>-->
				<!--<entry>-->
					<!--<key>someKey</key>-->
					<!--<value>someValue</value>-->
				<!--</entry>-->
				<!--<entry>-->
					<!--<key>someOtherKey</key>-->
					<!--<value>someOtherValue</value>-->
				<!--</entry>-->
			<!--</job-data-map>-->
		<!--</job>-->

		<!--<trigger>-->
			<!--<simple>-->
				<!--<name>TestSimpleTrigger2AtTenSecondIntervalAndFiveRepeats</name>-->
				<!--<group>GroupOfTestJob2Triggers</group>-->
				<!--<job-name>TestJob2</job-name>-->
				<!--<job-group>GroupOfTestJob2</job-group>-->
				<!--<start-time>2010-02-09T10:15:00</start-time>-->
				<!--<misfire-instruction>MISFIRE_INSTRUCTION_RESCHEDULE_NOW_WITH_EXISTING_REPEAT_COUNT</misfire-instruction>-->
				<!--<repeat-count>5</repeat-count>-->
				<!--<repeat-interval>10000</repeat-interval>-->
			<!--</simple>-->
		<!--</trigger>-->

		<!--<trigger>-->
			<!--<cron>-->
				<!--<name>TestCronTrigger2AtEveryMinute</name>-->
				<!--<group>GroupOfTestJob2Triggers</group>-->
				<!--<job-name>TestJob2</job-name>-->
				<!--<job-group>GroupOfTestJob2</job-group>-->
				<!--<job-data-map>-->
					<!--<entry>-->
						<!--<key>someKey</key>-->
						<!--<value>overriddenValue</value>-->
					<!--</entry>-->
					<!--<entry>-->
						<!--<key>someOtherKey</key>-->
						<!--<value>someOtherOverriddenValue</value>-->
					<!--</entry>-->
				<!--</job-data-map>-->
				<!--<cron-expression>*/2 * * ? * *</cron-expression>-->
			<!--</cron>-->
		<!--</trigger>-->

		<!--<trigger>-->
			<!--<cron>-->
				<!--<name>TestCronTrigger2AtEveryMinuteOnThe45thSecond</name>-->
				<!--<group>GroupOfTestJob2Triggers</group>-->
				<!--<job-name>TestJob2</job-name>-->
				<!--<job-group>GroupOfTestJob2</job-group>-->
				<!--<start-time>2010-02-09T12:26:00.0</start-time>-->
				<!--<end-time>2012-02-09T12:26:00.0</end-time>-->
				<!--<misfire-instruction>MISFIRE_INSTRUCTION_SMART_POLICY</misfire-instruction>-->
				<!--<cron-expression>45 * * ? * *</cron-expression>-->
				<!--<time-zone>America/Los_Angeles</time-zone>-->
			<!--</cron>-->
		<!--</trigger>-->
	</schedule>
</job-scheduling-data>